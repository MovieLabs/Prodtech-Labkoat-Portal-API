
name: Push to AWS Container Registry

 # This is required for requesting the AWS OIDC JWT
permissions:
  id-token: write
  contents: read

on:
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  IMAGE_NAME: ml-prodtech-portal-api
  ECR: 113736696237.dkr.ecr.us-west-2.amazonaws.com

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Build container
        run: docker build --tag ${{ env.IMAGE_NAME }} .
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::113736696237:role/GitHubActionsECR
          aws-region: us-west-2
      - name: Login to ECR with assumed role
        uses: docker/login-action@v1
        with:
          registry: ${{ env.ECR }}
        env:
          AWS_REGION: us-west-2
      - name: Push to ECR
        run: |
          docker tag ${{ env.IMAGE_NAME }} ${{ env.ECR }}/${{env.IMAGE_NAME}}:dev-${{ github.sha }}
          docker push ${{ env.ECR }}/${{ env.IMAGE_NAME }}:dev-${{ github.sha }}
      - name: Notify Service Mesh Repo
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.PAT }}
          repository: MovieLabs/Prodtech-ServiceMesh
          event-type: new-image
          client-payload: '{"service": "portal-api", "image": "${{ env.ECR }}/${{ env.IMAGE_NAME }}", "tag":"dev-${{ github.sha }}"}'
